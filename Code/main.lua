local GameManager = {}display.setStatusBar(display.HiddenStatusBar)local GTween = require "GTween"local BlerdoButton = require "BlerdoButton"local GEase = GTween.easingmath.randomseed(os.time())local _W = display.contentWidthlocal _H = display.contentHeightGameManager.new = function()    -- functions    local construct    local createUI    local moveBall    local createBoardSpace    local easyGame    local mediumGame    local mediumGame    local hardGame    local createTouch    local onRectTouch    local onUndoTouch    local checkWin    local checkDanger    local checkChanceToWin    local m = display.newGroup()        local bg    local backButton    local undoButton    local board    local boardSpace -- 0 - player 2 or computer, 1 - player 1, 3 - free    local title    local playerOneSmall    local playerOneBig    local playerTwoSmall    local playerTwoBig    local playerOneText    local playerTwoText    local playerTurn = 0    local rect    local balls = {}    local danger = {}    local chanceToWin = {}    local numberOfBall = 1    local lastCol = 0    local lastRow = 0    local ballWasMoved = false    local undoWasTouched = false    local playerMode = false    _G.level = nil -- 3 - hard, 2 - medium, 1 - easy    function createUI()        bg = display.newImageRect("bg.jpg",_W ,_H)        m:insert(bg)        bg.x = _W * 0.5        bg.y = _H * 0.5        backButton = display.newImageRect("back_btn.png",85,46)        m:insert(backButton)        backButton.x = backButton.width * 0.5 + 15        backButton.y = backButton.height * 0.5 + 15        undoButton = BlerdoButton.newAdvBtn({normal = "undo_btn.png", over = "undo_btn_over.png"})        m:insert(undoButton)        undoButton.x = _W - 15 - undoButton.width        undoButton.y = 15        undoButton._onRelease = onUndoTouch        title = display.newImageRect("title.png",200,32)        m:insert(title)        title.x = _W * 0.5        title.y = backButton.height * 0.5 + backButton.height + 15        board = display.newImageRect("board.png",320,278)        m:insert(board)        board:scale(0.87, 0.87)        board.x = _W * 0.5        board.y = board.height * 0.5 + title.height + backButton.height + 20        playerOneBig = display.newImageRect("blue_big.png",50,50)        m:insert(playerOneBig)        playerOneBig.x = 15 + playerOneBig.width * 0.5        playerOneBig.y = 390        playerOneBig.isVisible = true        playerOneSmall = display.newImageRect("blue_small.png",35,35)        m:insert(playerOneSmall)        playerOneSmall.x = playerOneBig.x         playerOneSmall.y = 390        playerOneSmall.isVisible = false        playerTwoBig = display.newImageRect("red_big.png",50,50)        m:insert(playerTwoBig)        playerTwoBig.x = _W - playerOneBig.width * 0.5 - 15        playerTwoBig.y = 390        playerTwoBig.isVisible = false        playerTwoSmall = display.newImageRect("red_small.png",35,35)        m:insert(playerTwoSmall)        playerTwoSmall.x = _W - playerOneBig.width * 0.5 - 15        playerTwoSmall.y = 390        playerTwoSmall.isVisible = true        playerOneText = display.newText("Player 1",0,0,"Hobo Std",15)        m:insert(playerOneText)        playerOneText:setTextColor(78, 38, 4)        playerOneText.x = 70 + playerOneBig.width * 0.5        playerOneText.y = 390        playerTwoText = display.newText("Player 2",0,0,"Hobo Std",15)        m:insert(playerTwoText)        playerTwoText:setTextColor(78, 38, 4)        playerTwoText.x = _W - playerOneBig.width * 0.5 - 70        playerTwoText.y = 390    end    function moveBall(col,player)        if numberOfBall < 43 then            if player == 0 then                balls[numberOfBall] = display.newImageRect("blue.png",40, 40)                numberOfBall = numberOfBall + 1                balls[numberOfBall - 1]:scale(0.87, 0.87)                m:insert(balls[numberOfBall - 1])                if col == 1 then                    balls[numberOfBall - 1].x = 51                    lastCol = 1                elseif col == 2 then                    balls[numberOfBall - 1].x = 87                    lastCol = 2                elseif col == 3 then                    balls[numberOfBall - 1].x = 124                    lastCol = 3                elseif col == 4 then                    balls[numberOfBall - 1].x = 160                    lastCol = 4                elseif col == 5 then                    balls[numberOfBall - 1].x = 197                    lastCol = 5                elseif col == 6 then                    balls[numberOfBall - 1].x = 233                    lastCol = 6                elseif col == 7 then                    balls[numberOfBall - 1].x = 270                    lastCol = 7                end                if boardSpace[6][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 1.07, {y = board.y + 91}, {ease = GEase.outQuintic})                    ballWasMoved = true                    boardSpace[6][col] = player                    lastRow = 6                elseif boardSpace[5][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.89, {y = board.y + 55}, {ease = GEase.outQuintic})                    boardSpace[5][col] = player                    ballWasMoved = true                    lastRow = 5                elseif boardSpace[4][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.7, {y = board.y + 18}, {ease = GEase.outQuintic})                    boardSpace[4][col] = player                    ballWasMoved = true                    lastRow = 4                elseif boardSpace[3][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.52, {y = board.y - 18}, {ease = GEase.outQuintic})                    boardSpace[3][col] = player                    ballWasMoved = true                    lastRow = 3                elseif boardSpace[2][col] == 3  then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.33, {y = board.y - 55}, {ease = GEase.outQuintic})                    boardSpace[2][col] = player                    ballWasMoved = true                    lastRow = 2                elseif boardSpace[1][col] == 3  then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.15, {y = board.y - 91}, {ease = GEase.outQuintic})                    boardSpace[1][col] = player                    ballWasMoved = true                    lastRow = 1                else                    balls[numberOfBall - 1]:removeSelf()                    ballWasMoved = false                    numberOfBall = numberOfBall - 1                end            elseif player == 1 then                balls[numberOfBall] = display.newImageRect("red.png",40, 40)                numberOfBall = numberOfBall + 1                balls[numberOfBall - 1]:scale(0.87, 0.87)                m:insert(balls[numberOfBall - 1])                if col == 1 then                    balls[numberOfBall - 1].x = 51                    lastCol = 1                elseif col == 2 then                    balls[numberOfBall - 1].x = 87                    lastCol = 2                elseif col == 3 then                    balls[numberOfBall - 1].x = 124                    lastCol = 3                elseif col == 4 then                    balls[numberOfBall - 1].x = 160                    lastCol = 4                elseif col == 5 then                    balls[numberOfBall - 1].x = 197                    lastCol = 5                elseif col == 6 then                    balls[numberOfBall - 1].x = 233                    lastCol = 6                elseif col == 7 then                    balls[numberOfBall - 1].x = 270                    lastCol = 7                end                if boardSpace[6][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 1.07, {y = board.y + 91}, {ease = GEase.outQuintic})                    boardSpace[6][col] = player                    ballWasMoved = true                    lastRow = 6                elseif boardSpace[5][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.89, {y = board.y + 55}, {ease = GEase.outQuintic})                    boardSpace[5][col] = player                    ballWasMoved = true                    lastRow = 5                elseif boardSpace[4][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.7, {y = board.y + 18}, {ease = GEase.outQuintic})                    boardSpace[4][col] = player                    ballWasMoved = true                    lastRow = 4                elseif boardSpace[3][col] == 3 then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.52, {y = board.y - 18}, {ease = GEase.outQuintic})                    boardSpace[3][col] = player                    ballWasMoved = true                    lastRow = 3                elseif boardSpace[2][col] == 3  then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.33, {y = board.y - 55}, {ease = GEase.outQuintic})                    boardSpace[2][col] = player                    ballWasMoved = true                    lastRow = 2                elseif boardSpace[1][col] == 3  then                    balls[numberOfBall - 1].y = board.y - 120                    GTween.new(balls[numberOfBall - 1], 0.15, {y = board.y - 91}, {ease = GEase.outQuintic})                    boardSpace[1][col] = player                    ballWasMoved = true                    lastRow = 1                else                    balls[numberOfBall - 1]:removeSelf()                    ballWasMoved = false                    numberOfBall = numberOfBall - 1                end            end        end    end    function createBoardSpace()        boardSpace = {}        for r = 1,6 do            boardSpace[r] = {}            for c = 1,7 do                boardSpace[r][c] = 3            end        end    end    function onRectTouch(self,e)        if e.phase == "began" then            if playerTurn % 2 == 0  or playerMode == true then                if e.x >= 34 and e.x < 68 then                    moveBall(1,playerTurn % 2)                elseif e.x >= 70 and e.x < 105 then                    moveBall(2,playerTurn % 2)                elseif e.x >= 107 and e.x < 142 then                    moveBall(3,playerTurn % 2)                elseif e.x >= 144 and e.x < 178 then                    moveBall(4,playerTurn % 2)                elseif e.x >= 180 and e.x < 215 then                    moveBall(5,playerTurn % 2)                elseif e.x >= 217 and e.x < 251 then                    moveBall(6,playerTurn % 2)                elseif e.x >= 253 and e.x <= 287 then                    moveBall(7,playerTurn % 2)                else                    ballWasMoved = false                end                if ballWasMoved == true then                    if playerTurn % 2 == 1 then                        playerTwoBig.isVisible = false                        playerOneBig.isVisible = true                        playerTwoSmall.isVisible = true                        playerOneSmall.isVisible = false                    elseif playerTurn % 2 == 0 then                        playerTwoBig.isVisible = true                        playerOneBig.isVisible = false                        playerTwoSmall.isVisible = false                        playerOneSmall.isVisible = true                    end                    playerTurn = playerTurn + 1                end                undoWasTouched = false                if playerMode == false then                    -- easyGame()                    -- mediumGame()                    hardGame()                end                timer.performWithDelay(510,checkWin,1)            end        end    end    function checkDanger()        danger = {0,0,0,0,0,0,0}        print("Danger: ")        for c = 1,7 do            local destinationRow = 0            for r = 1,6 do                if boardSpace[r][c] == 3 then                    destinationRow = r                end            end            if destinationRow > 0 then                if destinationRow == 5 then                    if boardSpace[destinationRow + 1][c] == 0 then                        danger[c] = danger[c] + 1                    end                elseif destinationRow == 4 then                    if boardSpace[destinationRow + 1][c] == 0 and boardSpace[destinationRow + 2][c] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow + 1][c] == 0 then                        danger[c] = danger[c] + 1                    end                elseif destinationRow <= 3 then                    if boardSpace[destinationRow + 1][c] == 0 and boardSpace[destinationRow + 2][c] == 0 and boardSpace[destinationRow + 3][c] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow + 1][c] == 0 and boardSpace[destinationRow + 2][c] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow + 1][c] == 0 then                        danger[c] = danger[c] + 1                    end                end                if c == 1 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 and boardSpace[destinationRow][c + 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 and boardSpace[destinationRow + 3][c + 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 2 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 and boardSpace[destinationRow][c + 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 and boardSpace[destinationRow + 3][c + 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 3 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 and boardSpace[destinationRow][c + 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 and boardSpace[destinationRow + 3][c + 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 4 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 and boardSpace[destinationRow][c + 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 and boardSpace[destinationRow + 3][c + 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 and boardSpace[destinationRow + 3][c - 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 5 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c + 1] == 0 and boardSpace[destinationRow][c + 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 and boardSpace[destinationRow][c - 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 and boardSpace[destinationRow + 3][c - 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 and boardSpace[destinationRow + 2][c + 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 6 then                    -- W prawo                    if boardSpace[destinationRow][c + 1] == 0 then                        danger[c] = danger[c] + 1                    end                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 and boardSpace[destinationRow][c - 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 and boardSpace[destinationRow + 3][c - 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 0 then                            danger[c] = danger[c] + 1                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                elseif c == 7 then                    -- W lewo                    if boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 and boardSpace[destinationRow][c - 4] == 3 then                        danger[c] = danger[c] + 6                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 0 then                        danger[c] = danger[c] + 5                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 and boardSpace[destinationRow][c - 3] == 3 then                        danger[c] = danger[c] + 3                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 0 then                        danger[c] = danger[c] + 2                    elseif boardSpace[destinationRow][c - 1] == 0 and boardSpace[destinationRow][c - 2] == 3 then                        danger[c] = danger[c] + 1                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 and boardSpace[destinationRow + 3][c - 3] == 0 then                            danger[c] = danger[c] + 5                        elseif boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    elseif destinationRow == 4 then                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 0 and boardSpace[destinationRow + 2][c - 2] == 0 then                            danger[c] = danger[c] + 2                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            danger[c] = danger[c] + 1                        end                    end                end              end            print(danger[c])        end    end    function checkChanceToWin()        chanceToWin = {0,0,0,0,0,0,0}        local param0 = 5        local param1 = 5 -- Pewna wygra        local param2 = 4 -- Pewna wygrana w nastepnej rundzie        local param3 = 2 -- Mozliwa wygrana w nastepnej rundzie        local param4 = 1 -- Mozliwe 3 w nastepnej rundzie        local param5 = 1 -- Mozliwe 2 w nastepnej rundzie        print("Chance to win: ")        for c = 1,7 do            local destinationRow = 0            for r = 1,6 do                if boardSpace[r][c] == 3 then                    destinationRow = r                end            end            if destinationRow > 0 then                if destinationRow == 5 then                    if boardSpace[destinationRow + 1][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                elseif destinationRow == 4 then                    if boardSpace[destinationRow + 1][c] == 1 and boardSpace[destinationRow + 2][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow + 1][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                elseif destinationRow <= 3 then                    if boardSpace[destinationRow + 1][c] == 1 and boardSpace[destinationRow + 2][c] == 1 and boardSpace[destinationRow + 3][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow + 1][c] == 1 and boardSpace[destinationRow + 2][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow + 1][c] == 1 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                end                if c == 1 then                    -- Wiersz                    if boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 and boardSpace[destinationRow][c + 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 and boardSpace[destinationRow + 3][c + 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param1                        end                    end                elseif c == 2 then                    -- Wiersz                    if boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 3 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 and boardSpace[destinationRow + 3][c + 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param1                        elseif boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                elseif c == 3 then                    -- Wiersz                    if boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param2                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 3 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param2                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 3 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 3 and boardSpace[destinationRow][c + 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    elseif boardSpace[destinationRow][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 and boardSpace[destinationRow + 3][c + 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param0                        elseif boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                elseif c == 4 then                    -- Wiersz                    if boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c - 1] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c + 1] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 3] == 3 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                     elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 3 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 3 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 3 and boardSpace[destinationRow][c + 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    elseif boardSpace[destinationRow][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 and boardSpace[destinationRow + 3][c + 3] == 1 then                            dchanceToWin[c] = chanceToWin[c] + param0                        elseif boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 and boardSpace[destinationRow + 3][c - 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param0                        elseif boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                elseif c == 5 then                    -- Wiersz                    if boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 and boardSpace[destinationRow][c + 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 3 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 3 and boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 3 and boardSpace[destinationRow][c - 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c + 2] == 1 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                    elseif boardSpace[destinationRow][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    elseif boardSpace[destinationRow][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 and boardSpace[destinationRow + 3][c - 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param0                        elseif boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 and boardSpace[destinationRow + 2][c + 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                elseif c == 6 then                    -- Wiersz                    if boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 3 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param1                    elseif boardSpace[destinationRow][c + 1] == 1 and boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 and boardSpace[destinationRow][c + 1] == 3 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 and boardSpace[destinationRow + 3][c - 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param1                        elseif boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 0 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W prawo                        if boardSpace[destinationRow + 1][c + 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                elseif c == 7 then                    -- Wiersz                    if boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 1 then                        chanceToWin[c] = chanceToWin[c] + param0                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 1 and boardSpace[destinationRow][c - 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param3                    elseif boardSpace[destinationRow][c - 1] == 1 and boardSpace[destinationRow][c - 2] == 3 and boardSpace[destinationRow][c - 3] == 3 then                        chanceToWin[c] = chanceToWin[c] + param5                    end                    -- Przekątna                    if destinationRow <= 3 then                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 and boardSpace[destinationRow + 3][c - 3] == 1 then                            chanceToWin[c] = chanceToWin[c] + param1                        elseif boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    elseif destinationRow == 4 then                        -- W lewo                        if boardSpace[destinationRow + 1][c - 1] == 1 and boardSpace[destinationRow + 2][c - 2] == 1 then                            chanceToWin[c] = chanceToWin[c] + param4                        elseif boardSpace[destinationRow + 1][c - 1] == 1 then                            chanceToWin[c] = chanceToWin[c] + param5                        end                    end                end            end            print(chanceToWin[c])        end    end    function easyGame()        local randCol = math.random(1,7)        timer.performWithDelay(500,function()                moveBall(randCol,playerTurn % 2)                if playerTurn % 2 == 1 then                    playerTwoBig.isVisible = false                    playerOneBig.isVisible = true                    playerTwoSmall.isVisible = true                    playerOneSmall.isVisible = false                elseif playerTurn % 2 == 0 then                    playerTwoBig.isVisible = true                    playerOneBig.isVisible = false                    playerTwoSmall.isVisible = false                    playerOneSmall.isVisible = true                end                playerTurn = playerTurn + 1            end        ,1)    end    function mediumGame()        local positionOfMaxs = {}        local maxDanger = 0        local desiredCol = 0        local index = 0        checkDanger()            for i = 1,7 do            if maxDanger <= danger[i] then                maxDanger = danger[i]            end        end        for i = 1,7 do            if maxDanger == danger[i] then                table.insert(positionOfMaxs,i)            end        end                index = math.random(1,#positionOfMaxs)        desiredCol = positionOfMaxs[index]        timer.performWithDelay(500,function()                moveBall(desiredCol,playerTurn % 2)                if playerTurn % 2 == 1 then                    playerTwoBig.isVisible = false                    playerOneBig.isVisible = true                    playerTwoSmall.isVisible = true                    playerOneSmall.isVisible = false                elseif playerTurn % 2 == 0 then                    playerTwoBig.isVisible = true                    playerOneBig.isVisible = false                    playerTwoSmall.isVisible = false                    playerOneSmall.isVisible = true                end                playerTurn = playerTurn + 1            end        ,1)    end    function hardGame()        local positionOfMaxsDanger = {}        local positionOfMaxsWin = {}        local maxDanger = 0        local maxWin = 0        local desiredCol = 0        local indexDanger = 0        local indexWin = 0        checkDanger()        checkChanceToWin()        for i = 1,7 do            if maxDanger <= danger[i] then                maxDanger = danger[i]            end            if maxWin <= chanceToWin[i] then                maxWin = chanceToWin[i]            end        end        for i = 1,7 do            if maxDanger == danger[i] then                table.insert(positionOfMaxsDanger,i)            end            if maxWin == chanceToWin[i] then                table.insert(positionOfMaxsWin,i)            end        end        print("maxD: " .. maxDanger)        print("maxW: " .. maxWin)        indexDanger = math.random(1,#positionOfMaxsDanger)        indexWin = math.random(1,#positionOfMaxsWin)        if maxWin > maxDanger then            desiredCol = positionOfMaxsWin[indexWin]        elseif maxWin <= maxDanger then            print(positionOfMaxsDanger[indexDanger])            desiredCol = positionOfMaxsDanger[indexDanger]        end        timer.performWithDelay(500,function()                moveBall(desiredCol,playerTurn % 2)                if playerTurn % 2 == 1 then                    playerTwoBig.isVisible = false                    playerOneBig.isVisible = true                    playerTwoSmall.isVisible = true                    playerOneSmall.isVisible = false                elseif playerTurn % 2 == 0 then                    playerTwoBig.isVisible = true                    playerOneBig.isVisible = false                    playerTwoSmall.isVisible = false                    playerOneSmall.isVisible = true                end                playerTurn = playerTurn + 1            end        ,1)    end    function onUndoTouch()        if undoWasTouched == false then            balls[numberOfBall - 1]:removeSelf()            boardSpace[lastRow][lastCol] = 3            if ballWasMoved == true then                playerTurn = playerTurn + 1                if playerTurn % 2 == 0 then                    playerTwoBig.isVisible = false                    playerOneBig.isVisible = true                    playerTwoSmall.isVisible = true                    playerOneSmall.isVisible = false                elseif playerTurn % 2 == 1 then                    playerTwoBig.isVisible = true                    playerOneBig.isVisible = false                    playerTwoSmall.isVisible = false                    playerOneSmall.isVisible = true                end            end            numberOfBall = numberOfBall - 1            undoWasTouched = true        end    end    function createRect()        rect = display.newRect(_W * 0.5 - board.width * 0.5,title.height + backButton.height + 20,320,278)        rect:scale(0.83, 0.83)        rect.touch = onRectTouch        rect:addEventListener("touch", rect)        rect.alpha = 0.01    end    function checkWin()        if numberOfBall > 7 and numberOfBall < 43 then            for r = 1,6 do                for c = 1,4 do                    if boardSpace[r][c] == boardSpace[r][c + 1] and boardSpace[r][c] == boardSpace[r][c + 2] and boardSpace[r][c] == boardSpace[r][c + 3] then                        if boardSpace[r][c] == 1 or boardSpace[r][c] == 0 then                            native.showAlert("Congratulations!", "Player " .. boardSpace[r][c] + 1 .. " has won.")                        end                    end                end            end            for c = 1,7 do                for r = 1,3 do                    if boardSpace[r][c] == boardSpace[r + 1][c] and boardSpace[r][c] == boardSpace[r + 2][c] and boardSpace[r][c] == boardSpace[r + 3][c] then                        if boardSpace[r][c] == 1 or boardSpace[r][c] == 0 then                            native.showAlert("titleText", "Player " .. boardSpace[r][c] + 1 .. " has won.")                        end                    end                end            end            for r = 1,3 do                for c = 1,4 do                    if boardSpace[r][c] == boardSpace[r + 1][c + 1] and boardSpace[r][c] == boardSpace[r + 2][c + 2] and boardSpace[r][c] == boardSpace[r + 3][c + 3] then                        if boardSpace[r][c] == 1 or boardSpace[r][c] == 0 then                            native.showAlert("titleText", "Player " .. boardSpace[r][c]  + 1 .. " has won.")                        end                    end                end            end            for r = 1,3 do                for c = 7,4,-1 do                    if boardSpace[r][c] == boardSpace[r + 1][c - 1] and boardSpace[r][c] == boardSpace[r + 2][c - 2] and boardSpace[r][c] == boardSpace[r + 3][c - 3] then                        if boardSpace[r][c] == 1 or boardSpace[r][c] == 0 then                            native.showAlert("titleText", "Player " .. boardSpace[r][c]  + 1 .. " has won.")                        end                    end                end            end        end    end    function construct()        print "GameManager created"        createUI()        createBoardSpace()        createRect()    end    -- destructor      m.oldRemoveSelf = m.removeSelf    function m:removeSelf()        print "GameManager destroyed"        self:oldRemoveSelf()        self = nil    end    construct()    return mendGameManager.new()